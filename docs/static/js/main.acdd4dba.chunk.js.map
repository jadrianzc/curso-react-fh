{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFeetchGifs.js","components/GifGridItem.js","components/GiftGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","placeholder","value","onChange","target","getGifs","categories","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFeetchGifs","loading","state","setState","useEffect","then","imgs","setTimeout","GifGridItem","className","src","alt","GiftGrid","toUpperCase","GiftExpertApp","ReactDom","render","GifExpertApp","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACtB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAY,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC1CN,EAAc,MAKf,SACC,uBACCO,KAAK,QACLC,YAAY,aACZC,MAAOV,EACPW,SAnBuB,SAACR,GAC1BF,EAAcE,EAAES,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,mGACkFC,UACvGH,IAFqB,SAKHI,MAAMF,GALH,cAKhBG,EALgB,gBAMCA,EAAKC,OANN,uBAMdC,EANc,EAMdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXd,kBAefM,GAfe,4CAAH,sDCuBLO,EApBO,SAACf,GACtB,MAA0Bf,mBAAS,CAClCsB,KAAM,GACNS,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACTpB,EAAQC,GAAYoB,MAAK,SAACC,GAAD,OACxBC,YAAW,WACVJ,EAAS,CACRX,KAAMc,EACNL,SAAS,MAER,UAEF,CAAChB,IAEGiB,GCTOM,EATK,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,sBAAKsB,UAAU,OAAf,UACC,qBAAKC,IAAKvB,EAAKwB,IAAKd,IACpB,4BAAIA,QCgBQe,EAlBE,SAAC,GAAoB,IAAlB3B,EAAiB,EAAjBA,WACnB,EAAkCe,EAAcf,GAAlCa,EAAd,EAAQN,KAAcS,EAAtB,EAAsBA,QAEtB,OACC,qCACC,6BAAKhB,EAAW4B,gBAEfZ,GAAW,4CAEZ,qBAAKQ,UAAU,YAAf,SACEX,EAAOJ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aCMZkB,EAjBO,WACrB,MAAgC5C,mBAAS,CAAC,cAA1C,mBAAOQ,EAAP,KAAiBT,EAAjB,KAEA,OACC,qCACC,8CACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBACA,6BACES,EAASgB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAA2BA,WAAYA,GAAxBA,Y,MCRpB8B,IAASC,OAAO,cAACC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.acdd4dba.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategory }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategory((category) => [inputValue, ...category]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"textt\"\r\n\t\t\t\tplaceholder=\"Categorias\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategory: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async (categories) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?api_key=zbHpu7IjTKA7qb22RaJyQbxmRLdSKic0&limit=10&q=${encodeURI(\r\n\t\tcategories\r\n\t)}`;\r\n\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nconst useFeetchGifs = (categories) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(categories).then((imgs) =>\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 3000)\r\n\t\t);\r\n\t}, [categories]);\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default useFeetchGifs;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport useFeetchGifs from '../hooks/useFeetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GiftGrid = ({ categories }) => {\r\n\tconst { data: images, loading } = useFeetchGifs(categories);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3>{categories.toUpperCase()}</h3>\r\n\r\n\t\t\t{loading && <p>Cargando...</p>}\r\n\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GiftGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GiftGrid from './components/GiftGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\tconst [category, setCategory] = useState(['One Piece']);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategory={setCategory} />\r\n\t\t\t<hr />\r\n\t\t\t<ol>\r\n\t\t\t\t{category.map((categories) => (\r\n\t\t\t\t\t<GiftGrid key={categories} categories={categories} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GiftExpertApp;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDom.render(<GifExpertApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}